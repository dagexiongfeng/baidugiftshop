<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="baidu.giftshop.dao.GoodsMapper" >
  <resultMap id="BaseResultMap" type="baidu.giftshop.model.Goods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="classify_id" property="classifyId" jdbcType="INTEGER" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="product_type" property="productType" jdbcType="INTEGER" />
    
  </resultMap>
  <sql id="Base_Column_List" >
    id, classify_id, unit, name, state
  </sql>
  <select id="selectByClassifyid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select 
        g.id,g.classify_id,g.unit,g.name,g.state
        from goods_subbranch gs,goods g 
     where gs.goods_id=g.id and gs.subbranch_id=#{param1,jdbcType=INTEGER} 
     and g.classify_id=#{param2,jdbcType=INTEGER} limit 
     #{param3,jdbcType=INTEGER},#{param4,jdbcType=INTEGER}
  </select>
  <select id="selectAllGoods" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select 
        g.id,g.classify_id,g.unit,g.name,g.state
        from goods_subbranch gs,goods g 
     where gs.goods_id=g.id and gs.subbranch_id=#{param1,jdbcType=INTEGER} 
     limit #{param2,jdbcType=INTEGER},#{param3,jdbcType=INTEGER}
  </select>
  
  <select id="selectHotGoods" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select 
        g.id,g.classify_id,g.unit,g.name,g.state ,g.product_type
        from goods_subbranch gs,goods g 
     where gs.goods_id=g.id  and g.product_type= 1 and gs.subbranch_id=#{param1,jdbcType=INTEGER} 
     limit #{param2,jdbcType=INTEGER},#{param3,jdbcType=INTEGER}
  </select>
   
  <select id="selectNewGoods" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select 
        g.id,g.classify_id,g.unit,g.name,g.state ,g.product_type
        from goods_subbranch gs,goods g 
     where gs.goods_id=g.id  and g.product_type= 2 and gs.subbranch_id=#{param1,jdbcType=INTEGER} 
     limit #{param2,jdbcType=INTEGER},#{param3,jdbcType=INTEGER}
  </select>
  <select id="queryByClassifyId" resultMap="BaseResultMap">
     select
        g.id,g.classify_id,g.unit,g.name,g.state
        from goods_subbranch gs,goods g 
     where gs.goods_id=g.id and gs.subbranch_id=#{param1,jdbcType=INTEGER} and g.classify_id=#{param2,jdbcType=INTEGER}
     and g.name like #{param5,jdbcType=VARCHAR} 
     limit #{param3,jdbcType=INTEGER},#{param4,jdbcType=INTEGER}
  </select>
  
  <select id="queryAllGoods" resultMap="BaseResultMap">
     select
        g.id,g.classify_id,g.unit,g.name,g.state
        from goods_subbranch gs,goods g 
     where gs.goods_id=g.id and gs.subbranch_id=#{param1,jdbcType=INTEGER}
     and g.name like #{param4,jdbcType=VARCHAR} 
     limit #{param2,jdbcType=INTEGER},#{param3,jdbcType=INTEGER}
  </select>
  
 <!--  ================================================================== -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="baidu.giftshop.model.Goods" >
    insert into goods (id, classify_id, unit, 
      name, state)
    values (#{id,jdbcType=INTEGER}, #{classifyId,jdbcType=INTEGER}, #{unit,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="baidu.giftshop.model.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="classifyId != null" >
        classify_id,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="classifyId != null" >
        #{classifyId,jdbcType=INTEGER},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="baidu.giftshop.model.Goods" >
    update goods
    <set >
      <if test="classifyId != null" >
        classify_id = #{classifyId,jdbcType=INTEGER},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="baidu.giftshop.model.Goods" >
    update goods
    set classify_id = #{classifyId,jdbcType=INTEGER},
      unit = #{unit,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>