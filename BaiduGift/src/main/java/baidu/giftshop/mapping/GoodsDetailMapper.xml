<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="baidu.giftshop.dao.GoodsDetailMapper" >
  <resultMap id="BaseResultMap" type="baidu.giftshop.model.GoodsDetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="goods_code" property="goodsCode" jdbcType="VARCHAR" />
    <result column="shop_code" property="shopCode" jdbcType="VARCHAR" />
    <result column="bar_code" property="barCode" jdbcType="VARCHAR" />
    <result column="type1" property="type1" jdbcType="VARCHAR" />
    <result column="type2" property="type2" jdbcType="VARCHAR" />
    <result column="type3" property="type3" jdbcType="VARCHAR" />
    <result column="type4" property="type4" jdbcType="VARCHAR" />
    <result column="pic_group_id" property="picGroupId" jdbcType="INTEGER" />
    <result column="stock_price" property="stockPrice" jdbcType="DECIMAL" />
    <result column="baidu_price" property="baiduPrice" jdbcType="DECIMAL" />
    <result column="retail_price" property="retailPrice" jdbcType="DECIMAL" />
    <result column="cost_price" property="costPrice" jdbcType="DECIMAL" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, goods_id, name, goods_code, shop_code, bar_code, type1, type2, type3, type4, 
    pic_group_id, stock_price, baidu_price, retail_price, cost_price, state
  </sql>
<!-- ===================================================================== -->
<resultMap id="MybaseResultMap" type="baidu.giftshop.util.GoodsDetailB" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="goods_code" property="goods_code" jdbcType="VARCHAR" />
    <result column="shop_code" property="shop_code" jdbcType="VARCHAR" />
    <result column="bar_code" property="bar_code" jdbcType="VARCHAR" />
    <result column="type1" property="type1" jdbcType="VARCHAR" />
    <result column="type2" property="type2" jdbcType="VARCHAR" />
    <result column="type3" property="type3" jdbcType="VARCHAR" />
    <result column="type4" property="type4" jdbcType="VARCHAR" />
    <result column="pic_group_id" property="pic_group_id" jdbcType="INTEGER" />
    <result column="stock_price" property="stock_price" jdbcType="DECIMAL" />
    <result column="baidu_price" property="baidu_price" jdbcType="DECIMAL" />
    <result column="retail_price" property="retail_price" jdbcType="DECIMAL" />
    <result column="cost_price" property="cost_price" jdbcType="DECIMAL" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
  </resultMap>
  <select id="Type1" parameterType="java.lang.Integer" resultType="java.lang.String">
    select type1
    from goods_detail
    where goods_id = #{goods_id,jdbcType=INTEGER}
  </select>
  <select id="Type2" parameterType="java.lang.Integer" resultType="java.lang.String">
    select type2
    from goods_detail
    where goods_id = #{goods_id,jdbcType=INTEGER}
  </select>
  <select id="Type3" parameterType="java.lang.Integer" resultType="java.lang.String">
    select type3
    from goods_detail
    where goods_id = #{goods_id,jdbcType=INTEGER}
  </select>
  <select id="Type4" parameterType="java.lang.Integer" resultType="java.lang.String">
    select type4
    from goods_detail
    where goods_id = #{goods_id,jdbcType=INTEGER}
  </select>
  <select id="selectGroupId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select  distinct  pic_group_id
    from goods_detail
    where goods_id = #{goods_id,jdbcType=INTEGER}
  </select>
  <select id="selectBySubIdAndGoodsId" parameterType="java.lang.Integer" resultMap="MybaseResultMap">
  select 
     gd.id,gd.name,gd.goods_code,gd.shop_code,gd.bar_code,gd.type1,gd.type2,gd.type3,gd.type4,gd.pic_group_id,gd.stock_price,gd.retail_price,gd.baidu_price,gd.cost_price,gds.amount 
     from goods_detail gd,goods_detail_subbranch gds 
  where gds.goods_detail_id=gd.id and gd.goods_id=#{param2,jdbcType=INTEGER} and gds.subbranch_id=#{param1,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="baidu.giftshop.model.GoodsDetail" >
    insert into goods_detail (id, goods_id, name, 
      goods_code, shop_code, bar_code, 
      type1, type2, type3, 
      type4, pic_group_id, stock_price, 
      last_stock_price, retail_price, cost_price, 
      state)
    values (#{id,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{goodsCode,jdbcType=VARCHAR}, #{shopCode,jdbcType=VARCHAR}, #{barCode,jdbcType=VARCHAR}, 
      #{type1,jdbcType=VARCHAR}, #{type2,jdbcType=VARCHAR}, #{type3,jdbcType=VARCHAR}, 
      #{type4,jdbcType=VARCHAR}, #{picGroupId,jdbcType=INTEGER}, #{stockPrice,jdbcType=DECIMAL}, 
      #{lastStockPrice,jdbcType=DECIMAL}, #{retailPrice,jdbcType=DECIMAL}, #{costPrice,jdbcType=DECIMAL}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="baidu.giftshop.model.GoodsDetail" >
    insert into goods_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="goodsCode != null" >
        goods_code,
      </if>
      <if test="shopCode != null" >
        shop_code,
      </if>
      <if test="barCode != null" >
        bar_code,
      </if>
      <if test="type1 != null" >
        type1,
      </if>
      <if test="type2 != null" >
        type2,
      </if>
      <if test="type3 != null" >
        type3,
      </if>
      <if test="type4 != null" >
        type4,
      </if>
      <if test="picGroupId != null" >
        pic_group_id,
      </if>
      <if test="stockPrice != null" >
        stock_price,
      </if>
      <if test="lastStockPrice != null" >
        last_stock_price,
      </if>
      <if test="retailPrice != null" >
        retail_price,
      </if>
      <if test="costPrice != null" >
        cost_price,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="goodsCode != null" >
        #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="shopCode != null" >
        #{shopCode,jdbcType=VARCHAR},
      </if>
      <if test="barCode != null" >
        #{barCode,jdbcType=VARCHAR},
      </if>
      <if test="type1 != null" >
        #{type1,jdbcType=VARCHAR},
      </if>
      <if test="type2 != null" >
        #{type2,jdbcType=VARCHAR},
      </if>
      <if test="type3 != null" >
        #{type3,jdbcType=VARCHAR},
      </if>
      <if test="type4 != null" >
        #{type4,jdbcType=VARCHAR},
      </if>
      <if test="picGroupId != null" >
        #{picGroupId,jdbcType=INTEGER},
      </if>
      <if test="stockPrice != null" >
        #{stockPrice,jdbcType=DECIMAL},
      </if>
      <if test="lastStockPrice != null" >
        #{lastStockPrice,jdbcType=DECIMAL},
      </if>
      <if test="retailPrice != null" >
        #{retailPrice,jdbcType=DECIMAL},
      </if>
      <if test="costPrice != null" >
        #{costPrice,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="baidu.giftshop.model.GoodsDetail" >
    update goods_detail
    <set >
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="goodsCode != null" >
        goods_code = #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="shopCode != null" >
        shop_code = #{shopCode,jdbcType=VARCHAR},
      </if>
      <if test="barCode != null" >
        bar_code = #{barCode,jdbcType=VARCHAR},
      </if>
      <if test="type1 != null" >
        type1 = #{type1,jdbcType=VARCHAR},
      </if>
      <if test="type2 != null" >
        type2 = #{type2,jdbcType=VARCHAR},
      </if>
      <if test="type3 != null" >
        type3 = #{type3,jdbcType=VARCHAR},
      </if>
      <if test="type4 != null" >
        type4 = #{type4,jdbcType=VARCHAR},
      </if>
      <if test="picGroupId != null" >
        pic_group_id = #{picGroupId,jdbcType=INTEGER},
      </if>
      <if test="stockPrice != null" >
        stock_price = #{stockPrice,jdbcType=DECIMAL},
      </if>
      <if test="lastStockPrice != null" >
        last_stock_price = #{lastStockPrice,jdbcType=DECIMAL},
      </if>
      <if test="retailPrice != null" >
        retail_price = #{retailPrice,jdbcType=DECIMAL},
      </if>
      <if test="costPrice != null" >
        cost_price = #{costPrice,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="baidu.giftshop.model.GoodsDetail" >
    update goods_detail
    set goods_id = #{goodsId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      goods_code = #{goodsCode,jdbcType=VARCHAR},
      shop_code = #{shopCode,jdbcType=VARCHAR},
      bar_code = #{barCode,jdbcType=VARCHAR},
      type1 = #{type1,jdbcType=VARCHAR},
      type2 = #{type2,jdbcType=VARCHAR},
      type3 = #{type3,jdbcType=VARCHAR},
      type4 = #{type4,jdbcType=VARCHAR},
      pic_group_id = #{picGroupId,jdbcType=INTEGER},
      stock_price = #{stockPrice,jdbcType=DECIMAL},
      last_stock_price = #{lastStockPrice,jdbcType=DECIMAL},
      retail_price = #{retailPrice,jdbcType=DECIMAL},
      cost_price = #{costPrice,jdbcType=DECIMAL},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>